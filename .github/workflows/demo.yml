name: demo

on:
  push:
    branches: master

jobs:
  image-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout application repository
        uses: actions/checkout@v2

      - name: Evaluate production environment
        run: |
          cat .env.prod >> $GITHUB_ENV
          echo "VERSION=$(cat package.json | jq -r '.version')" >> $GITHUB_ENV
          echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV
          echo "VCS_REF=$(git log --format="%H" -n 1)" >> $GITHUB_ENV

      - name: Evaluate production image name
        run:  echo "IMAGE=${REGISTRY}/${SERVICE}_${NAMESPACE}:${VERSION}" >> $GITHUB_ENV

      - name: Build image
        run: >
            docker build -f .docker/Dockerfile -t ${IMAGE} --rm
            --build-arg WORKDIR=$APP_PATH}
            --build-arg BUILD_DATE=${BUILD_DATE}
            --build-arg VCS_REF=${VCS_REF}
            --build-arg VERSION=${VERSION}
            .

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ env.REGISTRY }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - run: docker push ${IMAGE}
      - run: echo "DIGEST_IMAGE=$(docker inspect --format='{{index .RepoDigests 0}}' ${IMAGE})" >> $GITHUB_ENV
      - run: echo $GITHUB_ENV
      - name: Upload production env
        uses: actions/upload-artifact@v1
        with:
          name: github-env
          path: ${{ env.GITHUB_ENV }}

  image-deploy:
    runs-on: ubuntu-latest
    needs: production-image-build

    steps:
      - name: Download production env
        uses: actions/download-artifact@v2
        with:
          name: github-env
      - run: printenv